
Implementing Toast in react--->












Navigation(Navigate to screen) in react--->
import {useHistory} from 'react-router-dom'
const history = useHistory();
history.push('/login')
history.push only works in case of <BrowserRoute>. BrowserRoute makes website like an app.




Uploading Images files to cloudinary--->








*we can only store strings in local storage*
localstorage.setitem("name","ayush");
localStorage.getItem("name")



useContext Hooks Learn (it will help user to go to login when user is not logged in)

Context helps us to send from 1 child to other childs.
//eg: we are sending value from app.js to componentF.js

app.js
export const UserContext = React.createContext()
export const ChannelContext = React.createContext()

<UserContext.Provider value={"ayush"}>
<ChannelContext.Provider value={"kahndelewal"}>
<ComponentF />
<ChannelContext.Provider>
<UserContext.Provider>

ComponentF.js
import {useContext} from 'react'
import {useContext,channeComntext} from '../App.js'

const user = useContext(usercontext);
const channel = useContext(channelConrtext);

return(
<div>{user}---{channel}
)



adding comment on post------------>
postModel.js
add one more type in schema::   (comments will be an array)
comments = [{
          text:String,
          postedBy:{type:ObjectId,ref:"User"}                   //(Make sure to have :: const {ObjectId} = mongoose.schema.Types
          }]

postRoutes.js or (commentRoutes.js)
router.put('/comment',requireLogin,(req,res)=>{
  
    const comment = {text:req.body.text  ,    postedBy: req.user._id}                       //(requireLogin() returns user details on req.user)
    Post.findByIdAndUpdate(req.body.postid,{                                                //let suppose Post is mongoose.model of message or post
      $push:{comments:comment}
   },{
   new: true
   })
   .populate("comments.postedBy","_id name")
   .exec((err,res)=>{
   if(err)   return res.json({error:'Something went wrong'})
   else      return res.json({data:"Comment added successfully"})
  })
    
    

})




